name: "Delete UAT deployment"
description: 'Deletes a UAT deployment with a name that matches the merged or closed branch'
inputs:
  branch_name:
    description: "Optional branch name - inferred if not given"
    required: false
outputs:
  branch-name:
    description: "Extracted branch name"
    value: ${{ steps.extract_branch.outputs.branch }}
  release-name:
    description: "Extracted release name"
    value: ${{ steps.extract_release.outputs.release }}
  delete-message:
    description: "Extracted delete message"
    value: ${{ steps.delete_release.outputs.message }}

runs:
  using: "composite"
  steps:
    - name: Extract branch name
      id: extract_branch
      shell: bash
      env:
        BRANCH_NAME: ${{ inputs.branch_name || 'not_given' }}
      run: |
        if [ $BRANCH_NAME == "not_given" ]
        then
          branch=$GITHUB_HEAD_REF
        else
          branch=$BRANCH_NAME
        fi

        echo "branch=$branch" >> $GITHUB_OUTPUT

    - name: Extract release name
      id: extract_release
      shell: bash
      run: |
        branch=${{ steps.extract_branch.outputs.branch }}
        truncated_branch=$(echo $branch | tr '[:upper:]' '[:lower:]' | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-18 | sed 's/-$//')
        echo "release=$truncated_branch" >> $GITHUB_OUTPUT

    - name: Authenticate to the cluster
      id: authenticate_to_cluster
      uses: ministryofjustice/laa-reusable-github-actions/.github/actions/authenticate_to_cluster@d61e0cf24795b75f719a8981a4dc21e1334a1455
      with:
        kube-cert: ${{ secrets.KUBE_CERT }}
        kube-token: ${{ secrets.KUBE_TOKEN }}
        kube-cluster: ${{ secrets.KUBE_CLUSTER }}
        kube-namespace: ${{ secrets.KUBE_NAMESPACE }}

    - name: Delete UAT release
      id: delete_release
      shell: bash
      run: |
        release_name=${{ steps.extract_release.outputs.release }}
        found=$(helm list --all | grep $release_name || [[ $? == 1 ]])

        if [[ ! -z "$found" ]]
        then
          helm delete $release_name
          echo "message=\"Deleted UAT release ${release_name}\"" >> $GITHUB_OUTPUT
          kubectl delete pvc data-$release_name-postgresql-0
          echo "message=\"Deleted PVC for release ${release_name}\"" >> $GITHUB_OUTPUT
        else
          echo "message=\"UAT release, ${release_name}, not found\"" >> $GITHUB_OUTPUT
        fi
